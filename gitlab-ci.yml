stages:
  - test
  - build jar
  - build and push docker image
  - deploy
variables:
  DOCKER_IMAGE_TAG: "latest"
  DOCKER_BUILD_ARGS: "--build-arg SPRING_ACTIVE_PROFILE=dev"

run_tests:
  stage: test
  image: python:3.9-slim-buster
  before_script:
    - apt-get update && apt-get install make
  script:
    - make test

build:
  stage: build
  image: maven:3.6.2-jdk-11-slim
  script:
    - mvn clean install -Dspring.profiles.active=dev && mvn package -B -e -Dspring.profiles.active=dev
  artifacts:
    paths:
      - target/*.jar
  only:
    - dev

docker_build:
  stage: build and push docker image
  services:
    - docker:19.03.13-dind
  image: docker:19.03.13-dind
  script:
    - docker build $DOCKER_BUILD_ARGS -t $DOCKER_REPO:$DOCKER_IMAGE_TAG .
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD docker.io
    - docker push $DOCKER_REPO:$DOCKER_IMAGE_TAG
  only:
    - dev
deploy:
  image: ubuntu:latest
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - pwd
    - ssh root@$SERVER "docker login -u $DOCKER_USER -p $DOCKER_PASSWORD docker.io; docker stop $APP_NAME; docker system prune -a -f; docker run --name mysql --network host --env-file=mysql.env --volume=mysql-data:/var/lib/mysql -d mysql:latest; docker pull $DOCKER_REPO:latest; docker-compose up -d; docker logout"
  only:
    - dev